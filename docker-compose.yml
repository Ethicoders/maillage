services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USERNAME: gleam
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gleam_db
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  backend:
    build: backend/.
    # command: gleam run
    command: /bin/sh
    tty: true
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://gleam:password@db:5432/gleam_db?sslmode=disable
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ~/.gitconfig:/home/root/.gitconfig
    networks:
      - postgres
      - webnet
    ports:
      - "8000:8000"

  frontend:
    build: frontend/.
    command: gleam run -m lustre/dev start --port=8080
    environment:
      NODE_ENV: development
    volumes:
      - ./frontend:/app
    networks:
      - webnet
    ports:
      - "8080:8080"

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     # - ./data/certbot:/etc/nginx/certs
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   networks:
  #     - webnet
  #   depends_on:
  #     - frontend
  #     - backend

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   command: /bin/sh
  #   tty: true
  #   extra_hosts:
  #     - "maillage.dev=172.17.0.1"
  #     - "www.maillage.dev=172.17.0.1"
  #     - "backend.maillage.dev=172.17.0.1"
  #   volumes:
  #     # - certbot-etc:/etc/letsencrypt
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   # command: certonly --standalone --staging --agree-tos --no-eff-email --register-unsafely-without-email --dry-run -d maillage.dev -d www.maillage.dev -d backend.maillage.dev
  #   # command: certonly --webroot --webroot-path=/var/www/certbot --register-unsafely-without-email --agree-tos --no-eff-email -d maillage.dev -d www.maillage.dev -d backend.maillage.dev
  #   networks:
  #     - webnet


networks:
  postgres:
    driver: bridge
  webnet:
    driver: bridge

volumes:
  db-data:
  pgadmin:
  # certbot-etc: